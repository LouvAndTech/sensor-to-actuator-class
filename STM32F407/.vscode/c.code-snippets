{
	// Place your Prog_multitache workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Header Guard": {
		"prefix": "headerguard",
		"scope": "c,cpp",
		"body": [
			"#ifndef ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H",
			"#define ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H",
			"",
			"#endif // ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H"
		],
		"description": "Header guard for .h files"
	},
	"Active Object (C header)": {
		"prefix": "active-object-h",
		"scope": "c,cpp",
		"body": [
			"#ifndef ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H",
			"#define ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H",
			"",
			"#include <pthread.h>",
			"#include <mqueue.h>",
			"",
			"typedef struct ${TM_FILENAME_BASE/(\\w)(.*)/${1:/upcase}${2:/downcase}/}_s ${TM_FILENAME_BASE/(\\w)(.*)/${1:/upcase}${2:/downcase}/};",
			"",
			"extern ${TM_FILENAME_BASE/(\\w)(.*)/${1:/upcase}${2:/downcase}/} *${TM_FILENAME_BASE/(\\w)(.*)/${1:/upcase}${2:/downcase}/}_new(void);",
			"extern void ${TM_FILENAME_BASE/(\\w)(.*)/${1:/upcase}${2:/downcase}/}_free(${TM_FILENAME_BASE/(\\w)(.*)/${1:/upcase}${2:/downcase}/} *this);",
			"",
			"#endif // ${TM_FILENAME_BASE/(.*)/${1:/upcase}/}_H"
		],
		"description": "Header for active object in C"
	}
}